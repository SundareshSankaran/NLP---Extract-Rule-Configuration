{"type":"code","name":"NLP - List Rule Configuration Tables.step","displayName":"NLP - List Rule Configuration Tables.step","description":"","templates":{"SAS":"/* SAS templated code goes here */\n\n\n/* -----------------------------------------------------------------------------------------* \n   This macro creates a global macro variable called _usr_nameCaslib\n   that contains the caslib name (aka. caslib-reference-name) associated with the libname \n   and assumes that the libname is using the CAS engine.\n\n   As sysvalue has a length of 1024 chars, we use the trimmed option in proc sql\n   to remove leading and trailing blanks in the caslib name.\n*------------------------------------------------------------------------------------------ */\n\n%macro _usr_getNameCaslib(_usr_LibrefUsingCasEngine); \n\n   %global _usr_nameCaslib;\n   %let _usr_nameCaslib=;\n\n   proc sql noprint;\n      select sysvalue into :_usr_nameCaslib trimmed from dictionary.libnames\n      where libname = upcase(\"&_usr_LibrefUsingCasEngine.\") and upcase(sysname)=\"CASLIB\";\n   quit;\n\n%mend _usr_getNameCaslib;\n\n\nproc cas;\n\n/*-----------------------------------------------------------------------------------------*\n   Obtain values from the UI\n*------------------------------------------------------------------------------------------*/\n   \n   projectCaslibFullName=symget(\"projectCaslibFullName\");\n   derivedRuleConfigs=symget(\"derivedRuleConfigs\");\n\n/*-----------------------------------------------------------------------------------------*\n   Extract the project caslib from the name provided by the user.\n*------------------------------------------------------------------------------------------*/\n\n   projectCaslib = scan(projectCaslibFullName,2,\"/\");\n   \n/*-----------------------------------------------------------------------------------------*\n   List all tables within the project caslib which are rule configurations.\n*------------------------------------------------------------------------------------------*/\n\n   table.tableInfo /\n      caslib=projectCaslib\n;\n   table.tableInfo result=tableList /\n      caslib=projectCaslib\n;\n   ruleConfigList = tableList.TableInfo.where(Name contains \"_RULESCONFIG\");\n\n/*-----------------------------------------------------------------------------------------*\n   Placeholder for future - allow user to choose to list only concepts or category configs. \n*------------------------------------------------------------------------------------------*/\n\n/*-----------------------------------------------------------------------------------------*\n   Create additional variables to hold the type (whether category or concept) and the astore\n   name (which will prove useful in linking to downstream projects later). Also create a \n   variable to hold the analytics project caslib to avoid the user having to retype the same.\n*------------------------------------------------------------------------------------------*/\n\n   ruleConfigList=ruleConfigList.compute(\"Type\",scan(Name,-2,\"_\"));\n   ruleConfigList=ruleConfigList.compute(\"AstoreName\",scan(Name,1,\"_\"));\n   ruleConfigList=ruleConfigList.compute(\"Project_Caslib\",projectCaslib);\n\n/*-----------------------------------------------------------------------------------------*\n   Print to screen for the benefit of the user. \n*------------------------------------------------------------------------------------------*/\n\n   print ruleConfigList;\n\n   saveresult ruleConfigList dataout=&derivedRuleConfigs.;\n\nquit;"},"properties":{},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"param\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputParam\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Input parameters\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"projectCaslibFullName\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Provide caslib name from SAS Visual Text Analytics (VTA) - Model Studio project:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"derivedRuleConfigs\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"List of rule configurations:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"This can be a sas7bdat or a CAS table\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"NLP - List Rule Configuration Tables\\n\\nThis custom step helps you extract the rule configuration behind a rules-based Visual Text Analytics Concepts or Categories model definition and use in downstream applications.\\n\\nModern AI demands a greater level of transparency and ease of access to underlying metadata.  Use this custom step to help explain model logic to business stakeholders, understand relationship between different model constituents, document & visualize model definitions, and other applications.\\n\\nThis custom step requires a SAS Visual Text Analytics license.\\n \\n\\nParameters:\\n\\nNote that this custom step runs on data loaded in SAS Cloud Analytics Services (CAS). Ensure you are connected to CAS before running this step.\\n\\n\\nInput parameters:\\n\\n1. Input table (input port,required): connect a CAS table containing text intended for sentiment analysis.  The table should contain at least one character / varchar variable with the text to be scored, along with a document ID.\\n2. Text column (required): select either a char/ varchar column from the input table.\\n3. Document ID column (required): select a column which provides an ID for each observation.\\n4. Language (default is English): select the language in which you wish to perform sentiment analysis.  You have a choice of 17 languages, with English as the default selection.\\n\\n\\nOutput specifications:\\n\\n1. Additional columns (optional): select additional columns from the input table which you would like to carry over to the output table.\\n2. Output table (output port, required): connect a CAS table to contain the document-level sentiment and the score.\\n3. Matches table (output port, required): connect a CAS table to obtain keyword matches per document, corresponding to the concepts within the sentiment analysis model.\\n\\n\\nDocumentation:\\n\\n- The sentimentAnalysis.applySentimentConcepts CAS action : https://go.documentation.sas.com/doc/en/sasstudiocdc/default/pgmsascdc/casanpg/cas-sentimentanalysis-applysentimentconcepts.htm\\n\\n\\nCreated / contact : \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n\\n\\nVersion : 1.0.   (04APR2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"projectCaslibFullName\": \"\",\n\t\t\"derivedRuleConfigs\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","flowMetadata":{"inputPorts":[],"outputPorts":[{"name":"derivedRuleConfigs","displayName":"derivedRuleConfigs","minEntries":1,"maxEntries":1,"columnDelta":null,"type":"table"}]}}